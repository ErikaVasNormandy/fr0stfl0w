[
  
  {
    "title": "Volatilty (Part 1)",
    "url": "/posts/volatility-part-1/",
    "categories": "tech",
    "tags": "tech, volatility forensics, plague doctor",
    "date": "2023-09-26 12:55:00 +0000",
    





    
    "snippet": "Annotations of various tutorials on starting out in Volatility, a python-based tool for Host-Based Forensics and Incident Responders. This tool is for digital investigation, and requires the reposi...",
    "content": "Annotations of various tutorials on starting out in Volatility, a python-based tool for Host-Based Forensics and Incident Responders. This tool is for digital investigation, and requires the repository up on Github and a .vmem file for collection.sTutorials Used            Tutorial      Author      Comments                  Memory Forensics Using the Volatility Framework      Professor K      the most straightforward video              VOLATILITY 3 CHEATSHEET      Ashley Pearson      Volatility 2 vs 3 differences              (EASIEST) Install Volatility on Windows (Standalone)      Computer Science Basics      Skip to 0:45 seconds              How to Use Volatility for Memory Forensics and Analysis      Neil Fox      Goes a bit more in depth on malfind and code injection              Rapid Windows Memory Analysis with Volatility 3      John Hammond      Going a bit further (needs BTLO)      These are the resources in order that I used to get more familiar with the tool. They’re all pretty straightforward, and unlike MemProcFS, it required minimal setupIngredients  Python 3 (to run the vol.py script)  Volatility 3 (use the .zip file in the github repo)  .vmem Cadaver0. InstallationUsing Volatility 3, download the .zip file from their Github RepoGithub Repo &gt; Releases &gt; Source Code (.zip)cd into the repository and runpip3 install -r requirements.txtvol.py -f &lt;.VMEM SAMPLE&gt; windows.info1. Quick Command Toolboxvol.py -f &lt;.vmem sample&gt; &lt;module&gt;Note: I used the cridex.vmem example that Professor K showcased in his tutorialNote: I used python 3python vol.py -f cridex.vmem windows.infopython vol.py -f cridex.vmem windows.pslistpython vol.py -f cridex.vmem windows.pstreepython vol.py -f cridex.vmem windows.psscanpython vol.py -f cridex.vmem windows.netscanpython vol.py -f cridex.vmem socketspython vol.py -f cridex.vmem -o . window.dumpfiles --pid 1640 (this gets the exe and associated dlls)python vol.py -cridex.vmem -o . windows.memmap --dump --pid 1640strings 1640.dmp | grep -Fi \"weird thing, etc\" -C 5python vol.py -f cridex.vmem windows.malfind 2. AnnotationsHighly recommend that you actually watch these videos or read through them, these are more of a quick memory jog and so while they make sense to me since I’ve watched them, they’re probably not as insightful as at least giving the video a watch.Professor K Probably the most straightforward out of all the tutorials, he just dives right into it. Keep in mind that he uses a Linux host to examine a .vmem image of an infected Windows machine. He is also using Volatility 2. I didn’t have much trouble getting past this on a Windows workstation using Volatility 3 and Python 3, but you may need to pull up Ashley Pearson’s Volatility 2-3 cheatsheet.Timestamps1:08 - Cridex Sample ( I already downloaded this and put it in my volatility folder for ease of access)1:52 - Extract to memdump (user created)2:45 - Runs volatility as a command, but I just did python vol.py3:03 - volatility 3-2.4.1\\vol.py -f cridex_memdump\\cridex.vmem image.info----&gt; -f: use the following file (cridex.vmem) image.info----&gt; image.info is a basic Volatility module----&gt; vol.py -f cridex.vmem windows.info----&gt; this module gives basic system info, like when it was taken,  mount system 3:46 - vol.py -f cridex.vmem windows.info4:15 - vol.py -f cridex.vmem --profile=WinXPSP2x86 pslist----&gt; vol.py -f cridex.vmem windows.pslist, be aware of any that catch your attention4:45 - All the processes running on this machine5:12 - Takes note of explorer.exe &amp; an unknown reader_s1.exe5:40 - volatility -f cridex.vmem --profile=WinXPSP2x86 pstree----&gt; pip3 install -r .\\requirements.txt -vv5:46 vol.py -f cridex.vmem windows.pstree ----&gt; take note of explorer.exe to reader_s1.exe6:08 View processes currently trying to hide----&gt; vol.py -f cridex.vmem profia vle = Win... psxview----&gt; there's not quite a volatility equivalent , but just gets lumped with pstree and pslist----&gt; vol.py -f .vmem windows.psscan6:20 - The 1st two columns, the pslist &amp; psscan. If any of these register as fake----&gt; If an entry is found in psscan but not psslist, it is attempting to hide6:50 - Check for any sockets or open connections ( in 3 steps) ----&gt; vol.py -f cridex.vmem connscan (windows.netscan)----&gt; vol.py -f cridex.vmem sockets (\"All the sockets currently running + PID\")----&gt; Communication link between 2 programs7:26 - All the sockets currently running + PID8:09 - netscan8:20 - Three Other Pluginsvol.py -f cridex.vmem  cmdline --&gt; windows.cmdline.Cmdline8:36 - We know from our original pstree that PID 1484=suspicious ---&gt; path: C:\\Program Files \\Adobe\\Reader 9.0\\Reader\\Reader_S1.exe9:10 - cmdline should give us a complete path for how these two programs are actually run9:21 - Dump the memory area that runs this executable---&gt; volatility -f cridex.vmem --profile=WinXPSP2x86 procdump -p 164010:01 - In his video, he gave a dumpfile of 1640, the file was very dlls named this10:10 - Addressable memory being used by the executable vol.py -f cridex.vmem -o . windows.memmap --dump --pid 164010:40 - Look closer at the memory of what was going on inside of this reader.exe10:50 - strings 1640.dmp | grep -FI \"41.168.5.140\" -c 5compare this with thirteen cubed, which had vol.py -f cridex.vmem windows.pslist | grep i ()vol.py -f cridex.vmem windows.pslist --pidvol.py -f cridex.vmem windows.cmdline --pid 148411:25 - Here in the .dmp strings we can see communication with this IP Address using a POST, potentially exfiltrating info.12:17 - We could sscroll through the entire dmp file, in the video he found various banking urls12:40 - we could possibly reverse engineer it or upload the .dmp to VirusTotal13:45 - What is launching this malware? Dive into the registry14:12 - Most malware will look to see if infected files are still present at system startup + communicate with that .exe every few minutes14:25 - If that .exe has been removed, the payload will rebuild the executable but with a different name. Need to find the payload 15:18 - volatility -f cridex.vmem hivelist15:27 - What is hiding in one of the keys? Running as an exe at start16:55 - See my association with this exe and 1640 weird process17:20 - strings 1640.dmp | grep -Fi \"Kb000207877.exe\"Varonis Please check out the original tutorial, it’s one of the few non video formats and goes more into malfind in the Identifying Injected Code part  “…This displays a list of processes that Volatility suspects may contain injected code based on the header information displayed in hex, the permissions, and some extracted assembly code, just because a process is listed in the output it doesn’t mean the process is 100% malware.”Identify Malicious Network Connectionspython vol.py -f &lt;&gt; windows.netscanIdentify Injected Code  Things Volatility only suspects to be injected codewe’re looking for PAGE_EXECUTE_ReadWrite permissionsHeader of a Windows Executable is MZOR 4D 5Apython vol.py -f cridex.vmem windows.malfind Procdumpextracts exe and all dlls associatedpython vol.py -f &lt;&gt; -o &lt;location&gt; windows.dumpfiles --pid []Identify Malicious Processespslist pstree - for spotting malicious processes masquerading as valid ones.  “… Windows processes always run from set locations on disk. The parent process is usually a set process.”-k: specifies a group of services to run"
  },
  
  {
    "title": "How To Use This Site",
    "url": "/posts/intro-to-this-site/",
    "categories": "intro",
    "tags": "writing, intro, tech, documentation",
    "date": "2023-09-23 06:10:00 +0000",
    





    
    "snippet": "Just a brief overview on a big update to this site from the old one, what it’s for, and why.Use this as a repo for cluttered minds. Not sure if you’re a tech worker, artist, barista, or the like bu...",
    "content": "Just a brief overview on a big update to this site from the old one, what it’s for, and why.Use this as a repo for cluttered minds. Not sure if you’re a tech worker, artist, barista, or the like but this website is a collection of various resources and annotations for me to use. Hopefully you’ll find them useful too.OriginsTech StackThis site uses the Gitpage + Jekyll stack with the Chirpy theme.Yeah, I got rid of the old MERN one, but that was a cost and upkeep reason. I’m here to show documentation mainly not be a developerArt  If you’re looking for my art portfolio, that would be technomancer-01.comI think this jekyll setup is much better suited towards documentation, although I am already seeing that it loads images better so I may use it for art as well. One big component for me is the Tome Fragment aspect of them, how we’re going to treat things as if they are actual historical documents to be analyzed.Projects: On the Nature of Tarnished Souls, Bloodborne in Wonderland, Coruscant Library, DnD, Tales From the Leyline Road, Delta Green, m4ven.OS, and Medicine Bun.TechThe meat of why you are here. I overhauled this site specifically because I wanted it to be more documentation focused instead of artsy, although it still seeps through.Goals---Forensics (Plague Doctor)Threat Hunting (Huntsman)---Goals (More Specific)---Splunk AWS CertificationsForensics (CFE)Bug Bounties---ProjectsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---Memprocfs: Small NASA Booklet. Confirmed to workVolatility: 13 cubed version, Professor K versionEmail Header Analysis:  Small NASA Booklet.Prefetch files on Windows: Small NASA BookletCaesar Cipher: Under Basic Cantrips sectionPrice Calculator: Under Basic Cantrips sectionVolatility (John Hammond): Just timestamps---"
  },
  
  {
    "title": "On The Nature of Tarnished Souls",
    "url": "/posts/Elden-Ring/",
    "categories": "art",
    "tags": "art, elden ring, soulsborne, fromsoftware, arcane ink",
    "date": "2023-09-15 12:55:00 +0000",
    





    
    "snippet": "On The Nature of Tarnished SoulsYou may have come here from my art site to complete the installation of the basic environment. Git also needs to be installed.Eileen The CrowInstallationCreating a N...",
    "content": "On The Nature of Tarnished SoulsYou may have come here from my art site to complete the installation of the basic environment. Git also needs to be installed.Eileen The CrowInstallationCreating a New Site"
  },
  
  {
    "title": "MemProcFS (Part 1)",
    "url": "/posts/memprocfs-part-1/",
    "categories": "tech",
    "tags": "forensics, memprocfs",
    "date": "2023-08-25 03:33:00 +0000",
    





    
    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH...",
    "content": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  },
  
  {
    "title": "Bloodborne in Wonderland",
    "url": "/posts/Bloodborne/",
    "categories": "art",
    "tags": "art, bloodborne, arcane ink, fromsoftware, sketch, sketchbook, soulsborne",
    "date": "2023-08-10 16:34:00 +0000",
    





    
    "snippet": "“Good Hunter, lost in the nightmare. What do you think of that beastly legend and those ailing wards of the church?… I know what you did to them… It’s not y our fault. The nightmare held them, and ...",
    "content": "“Good Hunter, lost in the nightmare. What do you think of that beastly legend and those ailing wards of the church?… I know what you did to them… It’s not y our fault. The nightmare held them, and now they are free. But what about you? Have you profited at all?”Why Bloodborne?Download &amp; Replace"
  }
  
]

